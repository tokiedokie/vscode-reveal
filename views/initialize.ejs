<script src="libs/reveal.js/dist/reveal.js"></script>
<% if (enableZoom) { %>
<script src="libs/reveal.js/plugin/zoom/zoom.js"></script>
<% } %>
<script src="libs/reveal.js/plugin/notes/notes.js"></script>
<script src="libs/reveal.js/plugin/search/search.js"></script>
<script src="libs/reveal.js/plugin/markdown/markdown.js"></script>
<script src="libs/reveal.js/plugin/highlight/highlight.js"></script>
<script src="libs/reveal.js/plugin/math/math.js"></script>
<script src="libs/reveal.js-plugins/embed-tweet/plugin.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"></script>
<script src="libs/reveal.js-plugins/chart/plugin.js"></script>
<script src="libs/reveal.js-plugins/fullscreen/plugin.js"></script>

<% if (enableChalkboard) { %>
    <script src="libs/reveal.js-plugins/chalkboard/plugin.js"></script>
    <script src="libs/reveal.js-plugins/customcontrols/plugin.js"></script>
<% } %>

<% if (enableMenu) { %>
    <script src="libs/other-plugins/menu/menu.js"></script>
<% } %>
<script>
    // More info https://github.com/hakimel/reveal.js#configuration
    Reveal.initialize({

        controls: <%= controls %>,
        controlsTutorial: <%= controlsTutorial %>,
        controlsLayout: '<%= controlsLayout%>',
        controlsBackArrows: '<%= controlsBackArrows%>',
        progress: <%= progress %>,
        slideNumber: <%= slideNumber %>,
        history: <%= history %>,
        keyboard: <%= keyboard %>,
        overview: <%= overview %>,
        center: <%= center %>,
        touch: <%= touch %>,
        loop: <%= loop %>,
        rtl: <%= rtl %>,
        shuffle: <%= shuffle %>,
        fragments: <%= fragments %>,
        fragmentInURL: <%= fragmentInURL %>,
        embedded: <%= embedded %>,
        help: <%= help %>,
        showNotes: <%= showNotes %>,
        autoPlayMedia: <%= autoPlayMedia %>,
        autoSlide: <%= autoSlide %>,
        autoSlideStoppable: <%= autoSlideStoppable %>,
        autoSlideMethod: Reveal.navigateNext,
        defaultTiming: <%= defaultTiming %>,
        mouseWheel: <%= mouseWheel %>,
        hideAddressBar: <%= hideAddressBar %>,
        previewLinks: <%= previewLinks %>,
        transition: '<%= transition%>',
        transitionSpeed: '<%= transitionSpeed%>',
        backgroundTransition: '<%= backgroundTransition%>',
        viewDistance: <%= viewDistance %>,
        parallaxBackgroundImage: '<%= parallaxBackgroundImage%>',
        parallaxBackgroundSize: '<%= parallaxBackgroundSize%>',
        parallaxBackgroundHorizontal: <%= parallaxBackgroundHorizontal %>,
        parallaxBackgroundVertical: <%= parallaxBackgroundVertical %>,
        display: '<%= display%>',

        plugins: [RevealZoom, RevealNotes, RevealSearch, RevealMarkdown,
                  RevealHighlight, RevealMath, RevealEmbedTweet, RevealChart,
                  RevealFullscreen
        <% if (enableMenu) { %>
           , RevealMenu
        <% } %>
        <% if (enableChalkboard) { %>
            , RevealChalkboard, RevealCustomControls
        <% } %>
        ],

        dependencies: [
            { src: '//cdn.jsdelivr.net/npm/reveal-plantuml' },
            <% if (enableTitleFooter) { %>
                { src: 'libs/other-plugins/title-footer/plugin/title-footer/title-footer.js', async: true, callback: function () { title_footer.initialize(
                    <% if (title) { %>
                        '<%= title %>'
                    <% } %>
                ); } },
            <% } %>
        ],

        customcontrols: {
  		controls: [
  			{ icon: '<i class="fa fa-pen-square"></i>',
  			  title: 'Toggle chalkboard (B)',
  			  action: 'RevealChalkboard.toggleChalkboard();'
  			},
  			{ icon: '<i class="fa fa-pen"></i>',
  			  title: 'Toggle notes canvas (C)',
  			  action: 'RevealChalkboard.toggleNotesCanvas();'
  			}
  		]
    },
        math: {
            mathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js',
            config: 'TeX-AMS_HTML-full',
            TeX: { Macros: { RR: "{\\bf R}" } }
        },
        menu: {
    // Specifies which side of the presentation the menu will
    // be shown. Use 'left' or 'right'.
    side: 'left',

    // Specifies the width of the menu.
    // Can be one of the following:
    // 'normal', 'wide', 'third', 'half', 'full', or
    // any valid css length value
    width: 'normal',

    // Add slide numbers to the titles in the slide list.
    // Use 'true' or format string (same as reveal.js slide numbers)
    numbers: false,

    // Specifies which slide elements will be used for generating
    // the slide titles in the menu. The default selects the first
    // heading element found in the slide, but you can specify any
    // valid css selector and the text from the first matching
    // element will be used.
    // Note: that a section data-menu-title attribute or an element
    // with a menu-title class will take precedence over this option
    titleSelector: 'h1, h2, h3, h4, h5, h6',

    // If slides do not have a matching title, attempt to use the
    // start of the text content as the title instead
    useTextContentForMissingTitles: false,

    // Hide slides from the menu that do not have a title.
    // Set to 'true' to only list slides with titles.
    hideMissingTitles: false,

    // Adds markers to the slide titles to indicate the
    // progress through the presentation. Set to 'false'
    // to hide the markers.
    markers: true,

    // Specify custom panels to be included in the menu, by
    // providing an array of objects with 'title', 'icon'
    // properties, and either a 'src' or 'content' property.
    custom: false,

    // Specifies the themes that will be available in the themes
    // menu panel. Set to 'true' to show the themes menu panel
    // with the default themes list. Alternatively, provide an
    // array to specify the themes to make available in the
    // themes menu panel, for example...
    //
    // [
    //     { name: 'Black', theme: 'dist/theme/black.css' },
    //     { name: 'White', theme: 'dist/theme/white.css' },
    //     { name: 'League', theme: 'dist/theme/league.css' },
    //     {
    //       name: 'Dark',
    //       theme: 'lib/reveal.js/dist/theme/black.css',
    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'
    //     },
    //     {
    //       name: 'Code: Zenburn',
    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'
    //     }
    // ]
    //
    // Note: specifying highlightTheme without a theme will
    // change the code highlight theme while leaving the
    // presentation theme unchanged.
    themes: false,

    // Specifies the path to the default theme files. If your
    // presentation uses a different path to the standard reveal
    // layout then you need to provide this option, but only
    // when 'themes' is set to 'true'. If you provide your own
    // list of themes or 'themes' is set to 'false' the
    // 'themesPath' option is ignored.
    themesPath: 'dist/theme/',

    // Specifies if the transitions menu panel will be shown.
    // Set to 'true' to show the transitions menu panel with
    // the default transitions list. Alternatively, provide an
    // array to specify the transitions to make available in
    // the transitions panel, for example...
    // ['None', 'Fade', 'Slide']
    transitions: false,

    // Adds a menu button to the slides to open the menu panel.
    // Set to 'false' to hide the button.
    openButton: true,

    // If 'true' allows the slide number in the presentation to
    // open the menu panel. The reveal.js slideNumber option must
    // be displayed for this to take effect
    openSlideNumber: false,

    // If true allows the user to open and navigate the menu using
    // the keyboard. Standard keyboard interaction with reveal
    // will be disabled while the menu is open.
    keyboard: true,

    // Normally the menu will close on user actions such as
    // selecting a menu item, or clicking the presentation area.
    // If 'true', the sticky option will leave the menu open
    // until it is explicitly closed, that is, using the close
    // button or pressing the ESC or m key (when the keyboard
    // interaction option is enabled).
    sticky: false,

    // If 'true' standard menu items will be automatically opened
    // when navigating using the keyboard. Note: this only takes
    // effect when both the 'keyboard' and 'sticky' options are enabled.
    autoOpen: true,

    // If 'true' the menu will not be created until it is explicitly
    // requested by calling RevealMenu.init(). Note this will delay
    // the creation of all menu panels, including custom panels, and
    // the menu button.
    delayInit: false,

    // If 'true' the menu will be shown when the menu is initialised.
    openOnInit: false,

    // By default the menu will load it's own font-awesome library
    // icons. If your presentation needs to load a different
    // font-awesome library the 'loadIcons' option can be set to false
    // and the menu will not attempt to load the font-awesome library.
    loadIcons: true
  },
  anything: [ 
            {
                className: "mermaid"
            },
            // ...
        ],
        <!-- PlantUML plugin from https://github.com/reveal-plantuml/reveal-plantuml.github.io -->
        plantuml: {
            serverPath: 'https://www.plantuml.com/plantuml/svg/'
        },
        chart: {
		defaults: {
			color: 'lightgray', // color of labels
			scale: {
				beginAtZero: true,
				ticks: { stepSize: 1 },
				grid: { color: "lightgray" } , // color of grid lines
			},
		},
		line: { borderColor: [ "rgba(20,220,220,.8)" , "rgba(220,120,120,.8)", "rgba(20,120,220,.8)" ], "borderDash": [ [5,10], [0,0] ] },
		bar: { backgroundColor: [ "rgba(20,220,220,.8)" , "rgba(220,120,120,.8)", "rgba(20,120,220,.8)" ]},
		pie: { backgroundColor: [ ["rgba(0,0,0,.8)" , "rgba(220,20,20,.8)", "rgba(20,220,20,.8)", "rgba(220,220,20,.8)", "rgba(20,20,220,.8)"] ]},
	}
    });

</script>

